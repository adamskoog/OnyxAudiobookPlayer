{
    "env": {
        "browser": true,
        "es2021": true
    },
    "extends": [
        "plugin:react/recommended",
        "airbnb",
        "plugin:@typescript-eslint/recommended"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": "latest",
        "sourceType": "module"
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "react-hooks"
    ],
    "rules": {
        "max-len": ["off", {
            "code": 200,
            "ignoreUrls": true
        }],
        "no-plusplus": "off",
        "no-param-reassign": "off",                     // TODO: maybe clean these up later
        "@typescript-eslint/no-explicit-any": "off",    // TODO: Temp - turn these on later to clean up and add types.
        "prefer-promise-reject-errors": "off",          // TODO: Re-evalute
        "default-param-last": "off",                    // TODO: this shows up in the reducers, should we be declaring differently?
        "import/no-unresolved": "off",                  // TODO: add this back after first pass and fix.
        "import/no-webpack-loader-syntax": "off",       // TODO: t/s
        "consistent-return": "off",
        "radix": "off",
        "jsx-a11y/media-has-caption": "off",            // Turning off - this is likely not possible with how we are using it.
        "react/jsx-props-no-spreading": "off",
        "no-underscore-dangle": "off",
        "linebreak-style": 0,
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        "import/no-extraneous-dependencies": ["off"],       // Turned off due to redux giving issues - using redux-toolkit.
        "react/jsx-filename-extension": [ "warn", {"extensions": [".tsx"]} ],
        "import/extensions": [
            "error",
            "ignorePackages", {
                "ts": "never",
                "tsx": "never",
                "js": "never",
                "jsx": "never"
            }
        ],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "@typescript-eslint/explicit-function-return-type": [
            "warn",
            {
                "allowExpressions": true
            }
        ],
        "react-hooks/rules-of-hooks": "error",
        "react-hooks/exhaustive-deps": "off",
        "import/prefer-default-export": "off",
        "react/prop-types": "off"
    },
    "settings": {
        "import/resolver": {
            "typescript": {}
        }
    }
}
